"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/playground/page",{

/***/ "(app-pages-browser)/../../packages/openlovable-core-adapter/src/promptAdapter.ts":
/*!********************************************************************!*\
  !*** ../../packages/openlovable-core-adapter/src/promptAdapter.ts ***!
  \********************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   detectThemeFromPrompt: () => (/* binding */ detectThemeFromPrompt),\n/* harmony export */   generateFromPrompt: () => (/* binding */ generateFromPrompt),\n/* harmony export */   mulberry32: () => (/* binding */ mulberry32),\n/* harmony export */   promptToSpec: () => (/* binding */ promptToSpec),\n/* harmony export */   seededShuffle: () => (/* binding */ seededShuffle)\n/* harmony export */ });\n/* harmony import */ var _render__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./render */ \"(app-pages-browser)/../../packages/openlovable-core-adapter/src/render.ts\");\n/* harmony import */ var _renderThemed__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./renderThemed */ \"(app-pages-browser)/../../packages/openlovable-core-adapter/src/renderThemed.ts\");\n/* harmony import */ var _presets__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./presets */ \"(app-pages-browser)/../../packages/openlovable-core-adapter/src/presets.ts\");\n\n\n\n/**\n * Stub LLM adapter: map any prompt to a deterministic PageSpec.\n * Later, replace this with a real LLM call.\n */ async function promptToSpec(prompt) {\n    // Naive, deterministic mapping for demo only\n    const wantsKids = /kids|เด็ก/i.test(prompt);\n    const wantsTestimonials = /testimonials?/i.test(prompt);\n    const wantsPricing = /pricing|price|plan/i.test(prompt);\n    const wantsFaq = /faq|questions?/i.test(prompt);\n    const includeAll = !(wantsTestimonials || wantsPricing || wantsFaq);\n    const title = wantsKids ? 'AI Math for Kids' : 'AI Product Landing';\n    const subtitle = 'Generated from a single prompt using the PageSpec adapter';\n    const spec = {\n        title,\n        subtitle,\n        accent: '#3b82f6',\n        hero: {\n            headline: wantsKids ? 'Make Math Fun!' : 'Make It Real in Seconds',\n            subheadline: wantsKids ? 'Interactive exercises for elementary school students' : 'Type a prompt → get a full landing page preview',\n            ctaText: 'Get Started'\n        },\n        features: {\n            title: wantsKids ? 'Why choose us?' : 'Highlights',\n            items: wantsKids ? [\n                {\n                    label: 'Interactive exercises',\n                    icon: '/icons/check.svg'\n                },\n                {\n                    label: 'Progress tracking',\n                    icon: '/icons/check.svg'\n                },\n                {\n                    label: 'Designed for kids',\n                    icon: '/icons/check.svg'\n                }\n            ] : [\n                {\n                    label: 'Prompt → Spec → HTML',\n                    icon: '/icons/check.svg'\n                },\n                {\n                    label: 'Deterministic preview',\n                    icon: '/icons/check.svg'\n                },\n                {\n                    label: 'Export-ready output',\n                    icon: '/icons/check.svg'\n                }\n            ]\n        },\n        cta: {\n            headline: wantsKids ? 'Start your free trial today!' : 'Ready to ship your page?',\n            ctaText: wantsKids ? 'Sign Up' : 'Export Now'\n        },\n        footer: {\n            smallprint: '© 2025 Flowgami – Demo only'\n        }\n    };\n    if (wantsTestimonials || includeAll) {\n        ;\n        spec.testimonials = {\n            title: 'Loved by teams',\n            items: [\n                {\n                    quote: 'It just works.',\n                    author: 'Jane',\n                    avatar: '/avatars/jane.png'\n                },\n                {\n                    quote: 'Boosted our speed 10x.',\n                    author: 'Alex'\n                }\n            ]\n        };\n    }\n    if (wantsPricing || includeAll) {\n        ;\n        spec.pricing = {\n            title: 'Simple pricing',\n            plans: [\n                {\n                    name: 'Starter',\n                    price: '$9/mo',\n                    features: [\n                        '1 project',\n                        'Email support'\n                    ]\n                },\n                {\n                    name: 'Pro',\n                    price: '$29/mo',\n                    features: [\n                        'Unlimited projects',\n                        'Priority support'\n                    ]\n                }\n            ]\n        };\n    }\n    if (wantsFaq || includeAll) {\n        ;\n        spec.faq = {\n            title: 'FAQ',\n            items: [\n                {\n                    q: 'Can I export?',\n                    a: 'Yes, as HTML or Next.js.'\n                },\n                {\n                    q: 'Is there a free plan?',\n                    a: 'Yes, with basic features.'\n                }\n            ]\n        };\n    }\n    return spec;\n}\n// === New: detect Theme from prompt keywords\nfunction detectThemeFromPrompt(prompt) {\n    const p = (prompt || '').toLowerCase();\n    if (/(playful|fun|vibrant|friendly|cute|kid|kids|youth)/.test(p)) return 'playful';\n    if (/(elegant|sleek|refined|sophisticated|lux|premium)/.test(p)) return 'elegant';\n    if (/(cyber|neon|matrix|hacker|terminal|green on black|futuristic)/.test(p)) return 'cyber';\n    if (/(pastel|soft color|soft-colou?r|mint|peach|lavender)/.test(p)) return 'pastel';\n    if (/(newspaper|editorial|monochrome|print|press|headline|serif)/.test(p)) return 'newspaper';\n    if (/(glassmorphism|neon glass|glass|frosted|blur|glassy)/.test(p)) return 'neon-glass';\n    if (/(minimal|minimalist|simple|clean)/.test(p)) return 'minimal';\n    return null;\n}\nasync function generateFromPrompt(prompt, seed, themeOrUndefined, themeTokensOrUndefined, autoStyleOrUndefined, styleModeOrUndefined, variationStrategyOrUndefined) {\n    const spec = await promptToSpec(prompt);\n    const actualSeed = typeof seed === 'number' && Number.isFinite(seed) ? seed : Math.floor(Math.random() * 100000);\n    const hasSeed = typeof seed === 'number' && Number.isFinite(seed);\n    const explicitTheme = themeOrUndefined;\n    const explicitTokens = themeTokensOrUndefined;\n    const autoStyle = !!autoStyleOrUndefined;\n    // Backward-compat: some call sites pass variationStrategy in the 6th arg position\n    let styleModeParam = styleModeOrUndefined;\n    let variationParam = variationStrategyOrUndefined;\n    const VARS = new Set([\n        'none',\n        'reverse-features',\n        'shuffle-pricing',\n        'both',\n        'auto'\n    ]);\n    if (typeof styleModeParam === 'string' && VARS.has(styleModeParam)) {\n        variationParam = styleModeParam;\n        styleModeParam = undefined;\n    }\n    const styleMode = styleModeParam !== null && styleModeParam !== void 0 ? styleModeParam : autoStyle ? 'auto' : explicitTheme || explicitTokens ? 'explicit' : 'none';\n    let chosenTheme;\n    let themeSource = 'none';\n    if (explicitTheme || explicitTokens) {\n        // treated as explicit or seeded based on styleMode\n        if (styleMode === 'seeded') {\n            themeSource = 'seeded';\n        } else {\n            themeSource = 'explicit';\n        }\n        chosenTheme = explicitTheme;\n        if (explicitTheme) {\n            const p = (0,_presets__WEBPACK_IMPORTED_MODULE_2__.getPreset)(explicitTheme);\n            if (p) {\n                Object.assign(spec, (0,_presets__WEBPACK_IMPORTED_MODULE_2__.applyPresetToSpec)(spec, p));\n            } else {\n                spec.theme = explicitTheme;\n                spec.themeTokens = {\n                    ...spec.themeTokens,\n                    ...explicitTokens || {}\n                };\n            }\n        } else if (explicitTokens) {\n            spec.themeTokens = {\n                ...spec.themeTokens,\n                ...explicitTokens\n            };\n        }\n    } else if (autoStyle || styleMode === 'auto') {\n        const detected = detectThemeFromPrompt(prompt);\n        chosenTheme = detected || undefined;\n        if (detected) {\n            const p = (0,_presets__WEBPACK_IMPORTED_MODULE_2__.getPreset)(detected);\n            if (p) {\n                themeSource = 'prompt';\n                Object.assign(spec, (0,_presets__WEBPACK_IMPORTED_MODULE_2__.applyPresetToSpec)(spec, p));\n            }\n        }\n    }\n    // Variation Strategy handling (T40)\n    let appliedStrategy = variationParam || 'auto';\n    try {\n        var _spec_features, _spec_pricing;\n        const feats = (_spec_features = spec.features) === null || _spec_features === void 0 ? void 0 : _spec_features.items;\n        const plans = (_spec_pricing = spec.pricing) === null || _spec_pricing === void 0 ? void 0 : _spec_pricing.plans;\n        if (appliedStrategy === 'auto') {\n            // Auto (seed-based) logic — keep prior behavior for reproducibility\n            if (hasSeed) {\n                if (actualSeed % 2 === 0 && feats) {\n                    ;\n                    spec.features.items = [\n                        ...feats\n                    ].reverse();\n                }\n                if (actualSeed % 3 === 0 && plans) {\n                    ;\n                    spec.pricing.plans = seededShuffle([\n                        ...plans\n                    ], actualSeed);\n                }\n            }\n        } else if (appliedStrategy && appliedStrategy !== 'none') {\n            if ((appliedStrategy === 'reverse-features' || appliedStrategy === 'both') && feats) {\n                ;\n                spec.features.items = [\n                    ...feats\n                ].reverse();\n            }\n            if ((appliedStrategy === 'shuffle-pricing' || appliedStrategy === 'both') && plans) {\n                ;\n                spec.pricing.plans = seededShuffle([\n                    ...plans\n                ], actualSeed);\n            }\n        }\n    } catch (e) {}\n    const html = spec.theme ? (0,_renderThemed__WEBPACK_IMPORTED_MODULE_1__.renderThemedHTML)(spec) : (0,_render__WEBPACK_IMPORTED_MODULE_0__.renderLegacyHTML)(spec);\n    return {\n        spec,\n        html,\n        seed: actualSeed,\n        chosenTheme,\n        themeSource,\n        presetsVersion: _presets__WEBPACK_IMPORTED_MODULE_2__.PRESETS_VERSION,\n        variationStrategy: appliedStrategy\n    };\n}\n// --- deterministic PRNG (mulberry32)\nfunction mulberry32(seed) {\n    let t = seed >>> 0;\n    return function() {\n        t += 0x6d2b79f5;\n        let r = Math.imul(t ^ t >>> 15, 1 | t);\n        r ^= r + Math.imul(r ^ r >>> 7, 61 | r);\n        return ((r ^ r >>> 14) >>> 0) / 4294967296;\n    };\n}\n// --- seeded shuffle (Fisher–Yates)\nfunction seededShuffle(arr, seed) {\n    const rand = mulberry32(seed);\n    const a = arr.slice();\n    for(let i = a.length - 1; i > 0; i--){\n        const j = Math.floor(rand() * (i + 1));\n        [a[i], a[j]] = [\n            a[j],\n            a[i]\n        ];\n    }\n    return a;\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/../../packages/openlovable-core-adapter/src/promptAdapter.ts\n"));

/***/ })

});